# config/config.yaml
paths:
  raw_data_zip: "data/raw/images.zip"
  unzip_dir: "data/raw/temp_unzip"
  images_dir: "data/raw/images"
  annotations_dir: "data/raw/annotations"
  train_dir: "data/processed/train"
  val_dir: "data/processed/val"
  test_dir: "data/processed/test"
  models_dir: "models"
  model_name: "mask_detector.h5"
  reports_dir: "reports"
  mlflow_uri: "mlruns"
  haarcascade: "models/haarcascade_frontalface_default.xml"

data:
  image_size: [224, 224]
  batch_size: 32
  classes:
    - 'with_mask'
    - 'without_mask'
    - 'mask_weared_incorrect'
  class_mapping:
    'with_mask': 0
    'without_mask': 1
    'mask_weared_incorrect': 2
  validation_split: 0.2
  test_split: 0.1

model:
  input_shape: [224, 224, 3]
  num_classes: 3
  dropout_rate: 0.5
  
# Training Configuration (keeping original hyperparameters)
training:
  epochs: 30
  batch_size: 32
  learning_rate: 0.0001
  patience: 10
  monitor: 'val_accuracy'
  
# MLflow Configuration
mlflow:
  experiment_name: "face_mask_detection"
  run_name_prefix: "mask_detector"
  tracking_uri: "http://localhost:5000"
  artifact_location: "./mlruns"
  
# Monitoring Configuration
monitoring:
  drift_threshold: 0.1
  performance_threshold: 0.85
  log_predictions: true
  alert_email: "wwmsfernando@gmail.com"
  
# Deployment Configuration
deployment:
  model_stage: "Production"
  api_host: "0.0.0.0"
  api_port: 8080
  max_batch_size: 10
  timeout: 30
  
# Logging Configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "logs/app.log"

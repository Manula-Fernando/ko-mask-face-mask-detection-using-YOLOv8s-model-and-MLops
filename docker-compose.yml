version: '3.8'

services:
  # Face Mask Detection Web Application
  web:
    build: 
      context: .
      dockerfile: deployment/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_APP=app.main
      - MODEL_PATH=/app/models/best_mask_detector_imbalance_optimized.h5
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    volumes:
      - ./logs:/app/logs
      - model_artifacts:/app/mlruns
    depends_on:
      - mlflow
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MLflow Tracking Server
  mlflow:
    image: python:3.10-slim
    ports:
      - "5001:5000"
    environment:
      - MLFLOW_BACKEND_STORE_URI=sqlite:///mlflow.db
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/mlflow/artifacts
    volumes:
      - mlflow_data:/mlflow
      - model_artifacts:/mlflow/artifacts
    command: >
      bash -c "
        pip install mlflow[extras] &&
        mlflow server 
        --backend-store-uri sqlite:///mlflow/mlflow.db 
        --default-artifact-root /mlflow/artifacts 
        --host 0.0.0.0 
        --port 5000
      "
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Model Monitoring Service
  monitoring:
    build: 
      context: .
      dockerfile: deployment/Dockerfile
    environment:
      - SERVICE_TYPE=monitoring
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    volumes:
      - ./logs:/app/logs
      - model_artifacts:/app/mlruns
    depends_on:
      - mlflow
    command: python scripts/model_monitoring.py
    restart: unless-stopped

  # Data Drift Detection Service
  drift_detection:
    build: 
      context: .
      dockerfile: deployment/Dockerfile
    environment:
      - SERVICE_TYPE=drift_detection
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - model_artifacts:/app/mlruns
    depends_on:
      - mlflow
    command: python scripts/drift_detection.py
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/ssl:/etc/ssl:ro
    depends_on:
      - web
    restart: unless-stopped

volumes:
  mlflow_data:
  model_artifacts:
  
networks:
  default:
    name: face_mask_mlops_network
